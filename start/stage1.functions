# Set in parent script:
# -------------------------------------------
# set -e +a +m +s +i -f

# Set by sudo command:
# -------------------------------------------
# SUDO_USER

# Set in Dockerfile:
# -------------------------------------------
# CONST_ENVIRONMENT_DIR

# Set in Dockerfile or at runtime:
# -------------------------------------------
# VAR_LINUX_USER
# VAR_CONFIG_FILE
# VAR_CONFIG_DIR


isSomethingToDo(){
   if [ -f "/start/stage3" ]
   then
      echo "true"
   else
      echo "false"
   fi
}

createLinuxUser(){
   if [ ! $(/usr/bin/getent group $VAR_LINUX_USER) ]
   then
      /usr/sbin/addgroup -S $VAR_LINUX_USER
   fi
   if [ ! $(/usr/bin/getent passwd $VAR_LINUX_USER) ]
   then
      /usr/sbin/adduser -D -S -H -s /bin/false -u 102 -G $VAR_LINUX_USER $VAR_LINUX_USER
   fi
}

updateSudoersConf(){
   if [ -z "$SUDO_USER" ]
   then
      SUDO_USER="sudoer"
   fi
   local hostname="$(/bin/hostname)"
   local sudoers_file="/etc/sudoers.d/docker-var"
   local runas="root"
   if [ "$VAR_LINUX_USER" != "root" ]
   then
      local runas="$runas, $VAR_LINUX_USER"
   fi
   echo "$SUDO_USER $hostname=(root) NOPASSWD: /start/stage1" >> "$sudoers_file"
}

writeRuntimeEnvironment(){
   /usr/bin/env | /bin/grep -i "^VAR_" > "$CONST_ENVIRONMENT_DIR/runtime_environment"
}

startStage2(){
   if [ -n "$VAR_CONFIG_FILE" ]
   then
      local config_var_name="CONFIG_FILE"
      local config_var_value="$VAR_CONFIG_FILE"
   else
      local config_var_name="CONFIG_DIR"
      local config_var_value="$VAR_CONFIG_DIR"
   fi
   exec /usr/bin/env -i ENVIRONMENT_DIR=$CONST_ENVIRONMENT_DIR LINUX_USER=$VAR_LINUX_USER $config_var_name=$config_var_value /start/stage2
}
